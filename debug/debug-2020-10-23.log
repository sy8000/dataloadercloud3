[2020-10-23 08:08:08] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 08:08:09] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 08:08:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 08:08:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 08:08:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 08:08:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 08:08:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 08:08:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 08:08:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 08:08:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 08:08:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 08:08:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5b066c33
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 08:08:12] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 08:08:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 08:08:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 08:08:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:08:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 08:08:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:08:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 08:08:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 08:08:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5ecd9d4b
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@58fac071
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5ce743e1
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 08:08:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 08:08:34] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 08:08:34] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 08:08:34] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 08:08:34] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 08:08:34] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 08:08:34] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:08:34] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 08:08:34] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:08:34] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 00:08:34 GMT]
[2020-10-23 08:08:34] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 08:15:07] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-23 08:15:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-23 08:15:08] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-23 08:15:11] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 08:15:12] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 08:15:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 08:15:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 08:15:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 08:15:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 08:15:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 08:15:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 08:15:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 08:15:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 08:15:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 08:15:14] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 08:15:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 08:15:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a50d9fc
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 08:15:14] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 08:15:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 08:15:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 08:15:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:15:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 08:15:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:15:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 08:15:19] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 08:15:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2f36d615
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2fa01aab
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3aa53311
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 08:15:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 08:15:26] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 08:15:26] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 08:15:26] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 08:15:26] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 08:15:26] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 08:15:26] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:15:26] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 08:15:26] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:15:26] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 00:15:26 GMT]
[2020-10-23 08:15:26] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 08:18:11] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 08:18:12] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 08:18:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 08:18:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 08:18:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 08:18:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 08:18:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 08:18:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 08:18:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 08:18:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 08:18:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 08:18:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 08:18:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7b6c6e70
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 08:18:14] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 08:18:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 08:18:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 08:18:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:18:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 08:18:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:18:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 08:26:13] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 08:26:14] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 08:26:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 08:26:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 08:26:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 08:26:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 08:26:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 08:26:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 08:26:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 08:26:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 08:26:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 08:26:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 08:26:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 08:26:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@767f6ee7
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 08:26:16] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 08:26:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 08:26:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 08:26:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:26:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 08:26:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:26:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 08:28:53] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 08:28:53] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2817a239
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@525c457b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@36f67a0b
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 08:28:53] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 08:29:01] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 08:29:01] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 08:29:01] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 08:29:01] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 08:29:01] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 08:29:01] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:29:01] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 08:29:01] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:29:01] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 00:29:01 GMT]
[2020-10-23 08:29:01] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 08:32:50] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 08:32:51] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 08:32:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 08:32:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 08:32:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 08:32:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 08:32:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 08:32:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 08:32:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 08:32:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 08:32:52] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 08:32:53] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 08:32:53] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@dd71b20
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 08:32:53] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 08:32:53] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 08:32:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 08:32:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:32:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 08:32:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:32:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 08:32:58] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 08:32:58] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2817a239
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@525c457b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@36f67a0b
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 08:32:58] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 08:33:07] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [null] from doGetAuthenticationInfo
[2020-10-23 08:33:07] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- No AuthenticationInfo found for submitted AuthenticationToken [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returning null.
[2020-10-23 08:33:07] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 00:33:07 GMT]
[2020-10-23 08:33:17] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 08:33:17] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 08:33:17] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 08:33:17] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 08:33:17] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 08:33:17] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:33:17] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 08:33:17] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:33:17] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 00:33:17 GMT]
[2020-10-23 08:33:17] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 08:36:22] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 08:36:23] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 08:36:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 08:36:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 08:36:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 08:36:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 08:36:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 08:36:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 08:36:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 08:36:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 08:36:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 08:36:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 08:36:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 08:36:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5114b7c7
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 08:36:25] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 08:36:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 08:36:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 08:36:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:36:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 08:36:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:36:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 08:36:30] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 08:36:30] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5c961c1c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3a7580ae
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7c577307
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 08:36:30] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 08:36:38] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 08:36:38] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 08:36:38] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 08:36:38] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 08:36:38] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 08:36:38] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:36:38] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 08:36:38] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:36:38] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 00:36:38 GMT]
[2020-10-23 08:36:38] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 08:41:24] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 08:41:24] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 08:41:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 08:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 08:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 08:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 08:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 08:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 08:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 08:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 08:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 08:41:26] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 08:41:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 08:41:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@106d77da
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 08:41:26] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 08:41:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 08:41:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 08:41:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:41:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 08:41:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:41:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 08:54:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 08:54:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@f6fcd62
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1b797b18
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@cb6f0eb
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 08:54:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 08:54:33] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 08:54:33] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 08:54:33] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 08:54:33] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 08:54:33] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 08:54:33] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:54:33] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 08:54:33] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:54:33] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 00:54:33 GMT]
[2020-10-23 08:54:33] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 08:57:31] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 08:57:32] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 08:57:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 08:57:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 08:57:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 08:57:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 08:57:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 08:57:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 08:57:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 08:57:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 08:57:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 08:57:34] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 08:57:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 08:57:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5ed0b4e3
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 08:57:34] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 08:57:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 08:57:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 08:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 08:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 08:59:02] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-23 08:59:02] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-23 08:59:02] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-23 08:59:08] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 08:59:09] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 08:59:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 08:59:10] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 08:59:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 08:59:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@24534cb0
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 08:59:10] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 08:59:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 08:59:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 08:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 08:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 08:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 08:59:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 08:59:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3e5db35
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3ddc7674
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4f7d748d
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 08:59:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 08:59:20] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 08:59:20] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 08:59:20] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 08:59:20] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 08:59:20] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 08:59:20] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:59:20] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 08:59:20] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 08:59:20] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 00:59:20 GMT]
[2020-10-23 08:59:20] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:00:28] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 09:00:28] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 09:00:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 09:00:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 09:00:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 09:00:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 09:00:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 09:00:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 09:00:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 09:00:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 09:00:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 09:00:30] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 09:00:30] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 09:00:30] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@767f6ee7
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 09:00:30] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 09:00:30] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 09:00:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 09:00:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:00:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 09:00:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:00:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 09:00:36] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 09:00:36] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@1c7c7fd0
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5ccd9139
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4eaec7e6
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 09:00:36] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 09:00:43] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:00:43] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:00:43] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:00:43] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:00:43] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:00:43] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:00:43] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:00:43] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:00:44] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:00:44 GMT]
[2020-10-23 09:00:44] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:09:11] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 09:09:12] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 09:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 09:09:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 09:09:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 09:09:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 09:09:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 09:09:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 09:09:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 09:09:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 09:09:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 09:09:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 09:09:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 09:09:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@f324455
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 09:09:14] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 09:09:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 09:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 09:09:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:09:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 09:09:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:09:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 09:09:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 09:09:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@6908b114
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7c802c24
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@549385dd
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 09:09:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 09:09:27] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:09:27] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:09:27] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:09:27] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:09:27] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:09:27] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:09:27] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:09:27] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:09:27] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:09:27 GMT]
[2020-10-23 09:09:27] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:09:56] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:09:56] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:09:56] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:09:56] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:09:56] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:09:56] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:09:56] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:09:56] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:09:56] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:09:56 GMT]
[2020-10-23 09:09:56] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:14:30] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 09:14:31] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 09:14:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 09:14:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 09:14:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 09:14:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 09:14:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 09:14:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 09:14:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 09:14:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 09:14:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 09:14:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 09:14:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 09:14:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a50d9fc
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 09:14:33] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 09:14:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 09:14:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 09:14:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:14:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 09:14:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:14:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 09:14:40] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 09:14:40] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@44bb1b40
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6be1343e
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@784fafe8
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 09:14:40] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 09:14:46] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:14:46] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:14:46] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:14:46] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:14:46] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:14:46] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:14:46] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:14:46] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:14:46] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:14:46 GMT]
[2020-10-23 09:14:46] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:15:20] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 09:15:21] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 09:15:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 09:15:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 09:15:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 09:15:22] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 09:15:22] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 09:15:22] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 09:15:22] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@f324455
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 09:15:23] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 09:15:23] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 09:15:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 09:15:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:15:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 09:15:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:15:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 09:15:45] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 09:15:45] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7145eead
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@660cca4a
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2017caf5
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 09:15:45] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 09:15:53] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:15:53] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:15:53] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:15:53] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:15:53] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:15:53] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:15:53] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:15:53] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:15:53] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:15:53 GMT]
[2020-10-23 09:15:53] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:22:23] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 09:22:25] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 09:22:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 09:22:26] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 09:22:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 09:22:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@24534cb0
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 09:22:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 09:22:26] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 09:22:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 09:22:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 09:22:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:22:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 09:22:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:22:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 09:24:47] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 09:24:47] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7688ea10
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@467ce9a1
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7e55877f
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 09:24:47] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 09:24:59] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:24:59] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:24:59] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:24:59] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:24:59] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:24:59] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:24:59] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:24:59] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:24:59] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:24:59 GMT]
[2020-10-23 09:24:59] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:26:50] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 09:26:51] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 09:26:51] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 09:26:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 09:26:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 09:26:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 09:26:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 09:26:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 09:26:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 09:26:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 09:26:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 09:26:53] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 09:26:53] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 09:26:53] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63538bb4
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 09:26:53] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 09:26:53] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 09:26:53] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 09:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 09:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 09:26:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 09:26:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4d1cd3aa
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4ea36040
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3a1b9196
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 09:26:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 09:27:04] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:27:04] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:27:04] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:27:04] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:27:04] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:27:04] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:27:04] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:27:04] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:27:04] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:27:04 GMT]
[2020-10-23 09:27:04] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:31:51] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 09:31:52] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 09:31:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 09:31:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 09:31:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 09:31:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 09:31:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 09:31:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 09:31:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 09:31:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 09:31:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 09:31:54] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 09:31:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 09:31:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@65383667
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 09:31:54] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 09:31:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 09:31:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 09:31:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:31:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 09:31:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:31:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 09:32:22] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 09:32:22] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@18f1202f
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@54f2b29a
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1f2efc04
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 09:32:22] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 09:32:29] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:32:29] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:32:29] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:32:29] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:32:29] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:32:29] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:32:29] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:32:29] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:32:29] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:32:29 GMT]
[2020-10-23 09:32:29] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:34:34] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:34:34 GMT]
[2020-10-23 09:34:34] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Logging out subject with primary principal 沈洋
[2020-10-23 09:34:34] -- [DEBUG]: [org.apache.shiro.realm.AuthorizingRealm] -- No authorizationCache instance set.  Checking for a cacheManager...
[2020-10-23 09:34:34] -- [DEBUG]: [org.apache.shiro.realm.AuthorizingRealm] -- No cache or cacheManager properties have been set.  Authorization cache cannot be obtained.
[2020-10-23 09:34:40] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:34:40] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:34:40] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:34:40] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:34:40] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:34:40] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:34:40] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:34:40] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:34:40] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:34:40 GMT]
[2020-10-23 09:34:40] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:35:36] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 09:35:37] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 09:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 09:35:38] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 09:35:38] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 09:35:38] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63538bb4
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 09:35:38] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 09:35:38] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 09:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 09:35:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:35:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 09:35:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:35:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 09:36:07] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 09:36:07] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2817a239
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@525c457b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@36f67a0b
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 09:36:07] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 09:36:13] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:36:13] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:36:13] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:36:13] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:36:13] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:36:13] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:36:13] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:36:13] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:36:13] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:36:13 GMT]
[2020-10-23 09:36:13] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:36:30] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:36:30 GMT]
[2020-10-23 09:36:38] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:36:38] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:36:38] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:36:38] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:36:38] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:36:38] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:36:38] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:36:38] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:36:38] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:36:38 GMT]
[2020-10-23 09:36:38] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:41:46] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 09:41:47] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 09:41:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 09:41:48] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 09:41:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 09:41:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7b66322e
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 09:41:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 09:41:48] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 09:41:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 09:41:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 09:41:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:41:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 09:41:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:41:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 09:41:56] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 09:41:56] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@51f9ebd5
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@759244e7
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@33d17fad
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 09:41:56] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 09:42:18] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:42:18] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:42:18] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:42:18] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:42:18] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:42:18] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:42:18] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:42:18] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:42:18] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:42:18 GMT]
[2020-10-23 09:42:18] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:45:08] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 09:45:09] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 09:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 09:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 09:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 09:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 09:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 09:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 09:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 09:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 09:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 09:45:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 09:45:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 09:45:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@f324455
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 09:45:11] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 09:45:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 09:45:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 09:45:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:45:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 09:45:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 09:45:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 09:45:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 09:45:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3e5db35
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3ddc7674
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4f7d748d
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 09:45:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 09:45:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:45:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:45:23] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:45:23] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:45:23] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:45:23] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:45:23] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:45:23] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:45:23] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:45:23 GMT]
[2020-10-23 09:45:23] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 09:45:52] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 09:45:52] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 09:45:52] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 09:45:52] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 09:45:52] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 09:45:52] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:45:52] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 09:45:52] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 09:45:52] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 01:45:52 GMT]
[2020-10-23 09:45:52] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 10:42:49] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 10:42:50] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 10:42:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 10:42:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 10:42:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 10:42:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 10:42:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 10:42:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 10:42:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 10:42:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 10:42:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 10:42:52] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 10:42:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 10:42:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@34aeacd1
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 10:42:52] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 10:42:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 10:42:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 10:42:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 10:42:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 10:42:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 10:42:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 10:43:12] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 10:43:12] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@71422d88
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5e5637df
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5abf31a3
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 10:43:12] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 10:43:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 10:43:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 10:43:23] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 10:43:23] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 10:43:23] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 10:43:23] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 10:43:23] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 10:43:23] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 10:43:23] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 02:43:23 GMT]
[2020-10-23 10:43:23] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 10:51:30] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 10:51:31] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 10:51:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 10:51:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 10:51:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 10:51:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 10:51:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 10:51:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 10:51:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 10:51:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 10:51:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 10:51:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 10:51:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 10:51:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63cd2cd2
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 10:51:33] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 10:51:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 10:51:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 10:51:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 10:51:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 10:51:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 10:51:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 10:51:42] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 10:51:42] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@37d735d
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@72a05f42
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@216bf091
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 10:51:42] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 10:51:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 10:51:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 10:51:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 10:51:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 10:51:50] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 10:51:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 10:51:50] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 10:51:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 10:51:50] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 02:51:50 GMT]
[2020-10-23 10:51:50] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 10:52:38] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 10:52:39] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 10:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 10:52:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 10:52:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 10:52:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 10:52:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 10:52:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 10:52:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 10:52:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 10:52:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 10:52:41] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 10:52:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 10:52:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@24534cb0
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 10:52:41] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 10:52:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 10:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 10:52:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 10:52:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 10:52:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 10:52:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 10:52:56] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 10:52:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4638e471
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6fb79a59
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6b312f45
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 10:52:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 10:53:05] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 10:53:05] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 10:53:05] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 10:53:05] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 10:53:05] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 10:53:05] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 10:53:05] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 10:53:05] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 10:53:05] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 02:53:05 GMT]
[2020-10-23 10:53:05] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 10:53:49] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 10:53:50] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 10:53:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 10:53:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 10:53:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 10:53:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 10:53:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 10:53:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 10:53:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 10:53:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 10:53:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 10:53:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 10:53:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 10:53:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a50d9fc
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 10:53:52] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 10:53:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 10:53:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 10:53:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 10:53:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 10:53:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 10:53:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 10:54:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 10:54:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7ea4497c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@26219c6
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@9f57523
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 10:54:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 10:54:15] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 10:54:15] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 10:54:15] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 10:54:15] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 10:54:15] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 10:54:15] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 10:54:15] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 10:54:15] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 10:54:15] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 02:54:15 GMT]
[2020-10-23 10:54:15] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 11:05:12] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 11:05:12] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 11:05:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 11:05:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 11:05:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 11:05:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 11:05:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 11:05:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 11:05:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 11:05:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 11:05:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 11:05:14] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 11:05:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 11:05:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63538bb4
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 11:05:14] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 11:05:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 11:05:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 11:05:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:05:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 11:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 11:05:34] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 11:05:34] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@56f4d0c7
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@21eb47ba
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2dc9717c
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 11:05:34] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 11:05:41] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 11:05:41] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 11:05:41] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 11:05:41] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 11:05:41] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 11:05:41] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:05:41] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 11:05:41] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:05:41] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 03:05:41 GMT]
[2020-10-23 11:05:41] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 11:26:51] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 11:26:52] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 11:26:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 11:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 11:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 11:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 11:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 11:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 11:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 11:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 11:26:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 11:26:54] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 11:26:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 11:26:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5114b7c7
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 11:26:54] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 11:26:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 11:26:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 11:26:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:26:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 11:26:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:26:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 11:27:03] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 11:27:04] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@48c88937
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@56eadbaa
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@354b6784
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 11:27:04] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 11:27:10] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 11:27:10] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 11:27:10] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 11:27:10] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 11:27:10] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 11:27:10] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:27:10] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 11:27:10] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:27:10] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 03:27:10 GMT]
[2020-10-23 11:27:10] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 11:30:32] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 11:30:32] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 11:30:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 11:30:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 11:30:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 11:30:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 11:30:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 11:30:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 11:30:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 11:30:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 11:30:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 11:30:34] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 11:30:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 11:30:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@767f6ee7
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 11:30:34] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 11:30:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 11:30:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 11:30:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:30:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 11:30:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:30:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 11:30:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 11:30:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@33d669dc
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4cb0c59a
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@48eb2b9d
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 11:30:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 11:30:44] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 11:30:44] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 11:30:44] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 11:30:44] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 11:30:44] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 11:30:44] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:30:44] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 11:30:44] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:30:44] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 03:30:44 GMT]
[2020-10-23 11:30:44] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 11:31:03] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 11:31:03] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 11:31:03] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 11:31:03] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 11:31:03] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 11:31:03] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:31:03] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 11:31:03] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:31:03] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 03:31:03 GMT]
[2020-10-23 11:31:03] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 11:34:32] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 11:34:33] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 11:34:33] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 11:34:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 11:34:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 11:34:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 11:34:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 11:34:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 11:34:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 11:34:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 11:34:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 11:34:35] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 11:34:35] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 11:34:35] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@767f6ee7
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 11:34:35] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 11:34:35] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 11:34:35] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 11:34:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:34:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 11:34:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:34:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 11:34:41] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 11:34:41] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4d1cd3aa
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4ea36040
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3a1b9196
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 11:34:41] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 11:34:47] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 11:34:47] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 11:34:47] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 11:34:47] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 11:34:47] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 11:34:47] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:34:47] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 11:34:47] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:34:47] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 03:34:47 GMT]
[2020-10-23 11:34:47] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 11:36:41] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 11:36:42] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 11:36:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 11:36:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 11:36:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 11:36:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 11:36:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 11:36:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 11:36:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 11:36:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 11:36:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 11:36:44] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 11:36:44] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 11:36:44] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a50d9fc
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 11:36:44] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 11:36:44] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 11:36:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 11:36:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:36:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 11:36:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:36:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 11:36:54] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 11:36:54] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4fdf22d
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2f385bd4
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@47fb9e7d
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 11:36:54] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 11:37:01] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 11:37:01] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 11:37:01] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 11:37:01] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 11:37:01] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 11:37:01] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:37:01] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 11:37:01] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:37:01] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 03:37:01 GMT]
[2020-10-23 11:37:01] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 11:43:36] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 11:43:37] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 11:43:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 11:43:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 11:43:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 11:43:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 11:43:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 11:43:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 11:43:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 11:43:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 11:43:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 11:43:39] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 11:43:39] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 11:43:39] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7b6c6e70
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 11:43:39] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 11:43:39] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 11:43:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 11:43:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:43:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 11:43:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 11:43:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 11:44:07] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 11:44:07] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2c643b26
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@8838cb3
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@291b7b50
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 11:44:07] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 11:44:13] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 11:44:13] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 11:44:13] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 11:44:13] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 11:44:13] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 11:44:13] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:44:13] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 11:44:13] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 11:44:13] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 03:44:13 GMT]
[2020-10-23 11:44:13] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 12:00:20] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 12:00:21] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 12:00:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 12:00:22] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 12:00:22] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 12:00:22] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@106d77da
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 12:00:22] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 12:00:22] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 12:00:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 12:00:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 12:00:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 12:00:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 12:00:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 12:00:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 12:00:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@f6fcd62
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1b797b18
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@cb6f0eb
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 12:00:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 12:00:33] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 12:00:33] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 12:00:33] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 12:00:33] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 12:00:33] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 12:00:33] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 12:00:33] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 12:00:33] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 12:00:33] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 04:00:33 GMT]
[2020-10-23 12:00:33] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 14:46:05] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 14:46:05] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 14:46:05] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 14:46:05] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 14:46:05] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 14:46:05] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 14:46:05] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 14:46:05] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 14:46:05] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 06:46:05 GMT]
[2020-10-23 14:46:05] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 14:46:57] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 14:46:57] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 14:46:57] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 14:46:57] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 14:46:57] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 14:46:57] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 14:46:57] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 14:46:57] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 14:46:57] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 06:46:57 GMT]
[2020-10-23 14:46:57] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 14:47:47] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 14:47:48] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 14:47:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 14:47:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 14:47:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 14:47:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 14:47:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 14:47:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 14:47:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 14:47:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 14:47:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 14:47:50] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 14:47:50] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 14:47:50] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4ea1aa52
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 14:47:50] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 14:47:50] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 14:47:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 14:47:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 14:47:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 14:47:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 14:47:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 14:47:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 14:47:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@196542d7
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@a582a6d
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@58cd670
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 14:47:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 14:48:08] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 14:48:08] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 14:48:08] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 14:48:08] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 14:48:08] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 14:48:08] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 14:48:08] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 14:48:08] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 14:48:08] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 06:48:08 GMT]
[2020-10-23 14:48:08] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 15:23:58] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-23 15:23:58] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-23 15:23:58] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-23 15:24:02] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 15:24:03] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 15:24:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 15:24:04] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 15:24:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 15:24:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a50d9fc
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 15:24:04] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 15:24:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 15:24:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 15:24:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 15:24:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 15:24:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 15:24:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 15:24:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 15:24:10] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5c961c1c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3a7580ae
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7c577307
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 15:24:10] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 15:24:18] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 15:24:18] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 15:24:18] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 15:24:18] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 15:24:18] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 15:24:18] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 15:24:18] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 15:24:18] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 15:24:18] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 07:24:18 GMT]
[2020-10-23 15:24:18] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 16:04:04] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 16:04:04] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 16:04:04] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 16:04:04] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 16:04:04] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 16:04:04] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:04:04] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 16:04:04] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:04:04] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 08:04:04 GMT]
[2020-10-23 16:04:04] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 16:31:07] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 16:31:08] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 16:31:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 16:31:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 16:31:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 16:31:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 16:31:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 16:31:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 16:31:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 16:31:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 16:31:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 16:31:10] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 16:31:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 16:31:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6f9c5048
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 16:31:10] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 16:31:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 16:31:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 16:31:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:31:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 16:31:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:31:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 16:31:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 16:31:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5c87f0e0
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7c436694
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3c2e4412
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 16:31:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 16:31:25] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 16:31:25] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 16:31:25] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 16:31:25] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 16:31:25] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 16:31:25] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:31:25] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 16:31:25] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:31:25] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 08:31:25 GMT]
[2020-10-23 16:31:25] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 16:35:35] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 16:35:36] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 16:35:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 16:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 16:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 16:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 16:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 16:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 16:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 16:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 16:35:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 16:35:38] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 16:35:38] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 16:35:38] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63538bb4
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 16:35:38] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 16:35:38] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 16:35:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 16:35:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:35:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 16:35:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:35:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 16:35:43] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 16:35:43] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@43b4d8d1
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@47b4facb
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5df45408
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 16:35:43] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 16:35:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 16:35:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 16:35:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 16:35:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 16:35:50] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 16:35:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:35:50] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 16:35:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:35:50] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 08:35:50 GMT]
[2020-10-23 16:35:50] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 16:40:05] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 16:40:06] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 16:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 16:40:07] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 16:40:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 16:40:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@24534cb0
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 16:40:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 16:40:07] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 16:40:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 16:40:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 16:40:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:40:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 16:40:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:40:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 16:40:18] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 16:40:18] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@57500279
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7f3584f2
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3d620752
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 16:40:18] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 16:40:24] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 16:40:24] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 16:40:24] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 16:40:24] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 16:40:24] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 16:40:24] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:40:24] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 16:40:24] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:40:24] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 08:40:24 GMT]
[2020-10-23 16:40:24] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 16:42:36] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 16:42:37] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 16:42:37] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 16:42:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 16:42:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 16:42:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 16:42:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 16:42:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 16:42:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 16:42:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 16:42:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 16:42:39] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 16:42:39] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 16:42:39] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@f324455
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 16:42:39] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 16:42:39] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 16:42:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 16:42:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:42:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 16:42:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:42:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 16:42:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 16:42:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4aee9934
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7ad08c64
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@49a66243
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 16:42:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 16:43:05] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 16:43:05] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 16:43:05] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 16:43:05] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 16:43:05] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 16:43:05] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:43:05] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 16:43:05] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:43:05] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 08:43:05 GMT]
[2020-10-23 16:43:05] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 16:45:47] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 16:45:48] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 16:45:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 16:45:49] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 16:45:49] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 16:45:49] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@24534cb0
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 16:45:49] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 16:45:49] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 16:45:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 16:45:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:45:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 16:45:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:45:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 16:45:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 16:45:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2817a239
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@525c457b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@36f67a0b
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 16:45:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 16:46:02] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 16:46:02] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 16:46:02] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 16:46:02] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 16:46:02] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 16:46:02] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:46:02] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 16:46:02] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:46:02] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 08:46:02 GMT]
[2020-10-23 16:46:02] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 16:46:54] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 16:46:55] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 16:46:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 16:46:56] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 16:46:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 16:46:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@dd71b20
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 16:46:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 16:46:56] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 16:46:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 16:46:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 16:46:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:46:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 16:46:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:46:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 16:47:04] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 16:47:04] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@55824771
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@30e338af
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5d03a50
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 16:47:04] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 16:47:10] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 16:47:10] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 16:47:10] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 16:47:10] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 16:47:10] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 16:47:10] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:47:10] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 16:47:10] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:47:10] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 08:47:10 GMT]
[2020-10-23 16:47:10] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 16:51:34] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 16:51:35] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 16:51:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 16:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 16:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 16:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 16:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 16:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 16:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 16:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 16:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 16:51:36] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 16:51:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 16:51:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@106d77da
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 16:51:37] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 16:51:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 16:51:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 16:51:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:51:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 16:51:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 16:51:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 16:51:41] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 16:51:41] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@66a36ed6
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1734acf2
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@e9ea4ec
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 16:51:41] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 16:51:48] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 16:51:48] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 16:51:48] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 16:51:48] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 16:51:48] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 16:51:48] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:51:48] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 16:51:48] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:51:48] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 08:51:48 GMT]
[2020-10-23 16:51:48] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 16:52:15] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 16:52:15] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 16:52:15] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 16:52:15] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 16:52:15] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 16:52:15] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:52:15] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 16:52:15] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 16:52:15] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 08:52:15 GMT]
[2020-10-23 16:52:15] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 17:48:36] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 17:48:36] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 17:48:36] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 17:48:36] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 17:48:36] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 17:48:36] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 17:48:36] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 17:48:36] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 17:48:36] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 09:48:36 GMT]
[2020-10-23 17:48:36] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 18:37:06] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 18:37:07] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 18:37:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 18:37:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 18:37:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 18:37:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 18:37:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 18:37:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 18:37:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 18:37:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 18:37:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 18:37:09] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 18:37:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 18:37:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2f8c4fae
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 18:37:09] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 18:37:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 18:37:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 18:37:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 18:37:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 18:37:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 18:37:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 18:37:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 18:37:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@6c0349b5
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2db8f29
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4ac1f983
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 18:37:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 18:37:20] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 18:37:20] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 18:37:20] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 18:37:20] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 18:37:20] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 18:37:20] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:37:20] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 18:37:20] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:37:20] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 10:37:20 GMT]
[2020-10-23 18:37:20] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 18:39:04] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-23 18:39:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-23 18:39:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-23 18:39:10] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 18:39:11] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 18:39:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 18:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 18:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 18:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 18:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 18:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 18:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 18:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 18:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 18:39:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 18:39:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 18:39:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3206174f
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 18:39:13] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 18:39:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 18:39:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 18:39:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 18:39:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 18:39:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 18:39:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 18:39:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 18:39:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7b0a5aab
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2efe84ea
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@480f2782
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 18:39:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 18:39:46] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 18:39:46] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 18:39:46] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 18:39:46] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 18:39:46] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 18:39:46] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:39:46] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 18:39:46] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:39:46] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 10:39:46 GMT]
[2020-10-23 18:39:46] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 18:44:14] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 18:44:15] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 18:44:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 18:44:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 18:44:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 18:44:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 18:44:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7b6c6e70
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 18:44:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 18:44:16] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 18:44:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 18:44:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 18:44:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 18:44:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 18:44:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 18:44:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 18:44:22] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 18:44:22] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@59b53756
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@e19844b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2b8c953f
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 18:44:22] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 18:44:28] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 18:44:28] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 18:44:28] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 18:44:28] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 18:44:28] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 18:44:28] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:44:28] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 18:44:28] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:44:28] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 10:44:28 GMT]
[2020-10-23 18:44:28] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 18:45:22] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 18:45:23] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 18:45:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 18:45:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 18:45:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 18:45:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 18:45:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 18:45:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 18:45:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 18:45:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 18:45:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 18:45:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 18:45:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 18:45:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5114b7c7
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 18:45:25] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 18:45:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 18:45:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 18:45:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 18:45:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 18:45:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 18:45:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 18:45:30] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 18:45:30] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4d1cd3aa
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4ea36040
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3a1b9196
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 18:45:30] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 18:45:37] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 18:45:37] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 18:45:37] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 18:45:37] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 18:45:37] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 18:45:37] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:45:37] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 18:45:37] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:45:37] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 10:45:37 GMT]
[2020-10-23 18:45:37] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 18:46:29] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 18:46:29] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 18:46:29] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 18:46:29] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 18:46:29] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 18:46:29] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:46:29] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 18:46:29] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:46:29] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 10:46:29 GMT]
[2020-10-23 18:46:29] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 18:47:45] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 18:47:46] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 18:47:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 18:47:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 18:47:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 18:47:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 18:47:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 18:47:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 18:47:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 18:47:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 18:47:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 18:47:47] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 18:47:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 18:47:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@370c1968
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 18:47:48] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 18:47:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 18:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 18:47:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 18:47:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 18:47:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 18:47:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 18:47:53] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 18:47:53] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@6ed68132
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7ec669f2
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@21e77cd9
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 18:47:53] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 18:48:00] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 18:48:00] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 18:48:00] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 18:48:00] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 18:48:00] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 18:48:00] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:48:00] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 18:48:00] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:48:00] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 10:48:00 GMT]
[2020-10-23 18:48:00] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 18:57:52] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 18:57:52] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 18:57:52] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 18:57:52] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 18:57:52] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 18:57:52] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:57:52] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 18:57:52] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 18:57:52] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 10:57:52 GMT]
[2020-10-23 18:57:52] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 19:16:01] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 19:16:03] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 19:16:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 19:16:04] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 19:16:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 19:16:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3206174f
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 19:16:04] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 19:16:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 19:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 19:16:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 19:16:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 19:16:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 19:16:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 19:16:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 19:16:10] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@1057358
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@11ec0e29
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2b843df7
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 19:16:10] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 19:16:17] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 19:16:17] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 19:16:17] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 19:16:17] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 19:16:17] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 19:16:17] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 19:16:17] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 19:16:17] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 19:16:17] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 11:16:17 GMT]
[2020-10-23 19:16:17] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-23 19:17:08] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-23 19:17:09] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-23 19:17:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-23 19:17:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-23 19:17:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-23 19:17:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-23 19:17:10] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-23 19:17:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-23 19:17:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6f9c5048
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-23 19:17:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-23 19:17:11] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-23 19:17:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-23 19:17:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-23 19:17:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 19:17:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-23 19:17:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-23 19:17:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-23 19:17:15] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-23 19:17:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4250c7c8
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6ee9edeb
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@53c0f794
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-23 19:17:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-23 19:17:22] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-23 19:17:22] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-23 19:17:22] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-23 19:17:22] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-23 19:17:22] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-23 19:17:22] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 19:17:22] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-23 19:17:22] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-23 19:17:22] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Thu, 22-Oct-2020 11:17:22 GMT]
[2020-10-23 19:17:22] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
